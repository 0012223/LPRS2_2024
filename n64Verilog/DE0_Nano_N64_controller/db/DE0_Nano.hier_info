|DE0_Nano
CLOCK_50 => ~NO_FANOUT~
i_clk => i_clk.IN1
in_rst => pll_rst.IN1
LED[0] <= <GND>
LED[1] <= <GND>
LED[2] <= <GND>
LED[3] <= <GND>
LED[4] <= <GND>
LED[5] <= <GND>
LED[6] <= <GND>
LED[7] <= <GND>
o_led[0] <= N64_controller:N64_controller_inst.buttons
o_led[1] <= N64_controller:N64_controller_inst.buttons
o_led[2] <= N64_controller:N64_controller_inst.buttons
o_led[3] <= N64_controller:N64_controller_inst.buttons
o_led[4] <= N64_controller:N64_controller_inst.buttons
o_led[5] <= N64_controller:N64_controller_inst.buttons
o_led[6] <= N64_controller:N64_controller_inst.buttons
o_led[7] <= N64_controller:N64_controller_inst.buttons
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO_IN[0] => ~NO_FANOUT~
GPIO_IN[1] => ~NO_FANOUT~
io_n64_joypad_1 <> N64_controller:N64_controller_inst.data


|DE0_Nano|PLL:PLL_inst
areset => areset.IN1
inclk0 => sub_wire6[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|DE0_Nano|PLL:PLL_inst|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|DE0_Nano|PLL:PLL_inst|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|DE0_Nano|N64_controller:N64_controller_inst
clk_50MHZ => clk_50MHZ.IN1
data <> data
start => Selector1.IN7
buttons[0] <= buttons[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[1] <= buttons[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[2] <= buttons[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[3] <= buttons[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[4] <= buttons[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[5] <= buttons[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[6] <= buttons[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[7] <= buttons[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[8] <= buttons[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[9] <= buttons[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[10] <= buttons[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[11] <= buttons[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[12] <= buttons[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[13] <= buttons[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[14] <= buttons[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[15] <= buttons[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[16] <= buttons[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[17] <= buttons[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[18] <= buttons[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[19] <= buttons[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[20] <= buttons[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[21] <= buttons[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[22] <= buttons[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[23] <= buttons[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[24] <= buttons[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[25] <= buttons[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[26] <= buttons[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[27] <= buttons[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[28] <= buttons[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[29] <= buttons[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[30] <= buttons[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[31] <= buttons[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[32] <= buttons[32]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buttons[33] <= buttons[33]~reg0.DB_MAX_OUTPUT_PORT_TYPE
alive <= alive~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_Nano|N64_controller:N64_controller_inst|async_trap_and_reset:async_trap_and_reset_inst
async_sig => async_trap.CLK
outclk => sync2.CLK
outclk => actual_auto_reset_signal.CLK
out_sync_sig <= sync2.DB_MAX_OUTPUT_PORT_TYPE
auto_reset => auto_reset_signal.IN1
reset => sync2.ACLR
reset => actual_auto_reset_signal.ACLR
reset => actual_async_sig_reset.IN1


|DE0_Nano|N64_controller:N64_controller_inst|async_trap_and_reset:async_trap_and_reset_inst2
async_sig => async_trap.CLK
outclk => sync2.CLK
outclk => actual_auto_reset_signal.CLK
out_sync_sig <= sync2.DB_MAX_OUTPUT_PORT_TYPE
auto_reset => auto_reset_signal.IN1
reset => sync2.ACLR
reset => actual_auto_reset_signal.ACLR
reset => actual_async_sig_reset.IN1


